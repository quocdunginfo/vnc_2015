<?php
/*
 * Version: 150607
 * */
QdT_Library::loadLayoutClass('root');

class QdT_PageT_ProductDetail extends QdT_Layout_Root
{
    public $product = null;
    public $seo = array();
    public $r_products = array();
    public $product_imgs = array();
    public $size = null;

    public $product_order_setup = null;

    function __construct()
    {
        parent::__construct();

        $this->product_order_setup = QdSetupProductOrder::GET();
        $this->product = QdProduct::GET(get_query_var('id', 0));
        if ($this->product == null) static::redirectPageError404();//check resource


        $this->manufactor = QdManufactor::GET($this->product->manufacturer_id);

        //IMGS
        $tmp = $this->product->getImages();
        $tmp->SETRANGE('active', true);
        $tmp->SETORDERBY('order', 'asc');
        $this->product_imgs = $tmp->GETLIST();
        if (empty($this->product_imgs)) {
            $img_tmp = new QdImage();
            $img_tmp->path = $this->product->avatar;
            $img_tmp->active = true;
            array_push($this->product_imgs, $img_tmp);
        }
        //END IMGS

        $this->size = QdSize::GET($this->product->size_id);

        $this->r_products = $this->product->getRProducts2();

        $this->seo = $this->product->getSEOMeta();
    }


    public function loadScript()
    {
        QdJqwidgets::loadSinglePluginJS("form2js.js");
        QdJqwidgets::loadSinglePluginJS("js.cookie.js");
    }

    public function setPageInfoToClient()
    {
        parent::setPageInfoToClient(); // TODO: Change the autogenerated stub
        ?>
        <script>
            MYAPP.PageInfo.product_order_setup = <?=json_encode(QdSetupProductOrder::toJSON(array($this->product_order_setup)))?>;
            MYAPP.PageInfo.product_obj = <?=json_encode(QdProduct::toJSON(array($this->product)))?>;
        </script>
    <?php
    }

    public static function getPageName()
    {
        return 'product-detail';
    }

    public static function getPageViewClass()
    {
        return 'QdT_PageT_ProductDetail_View';
    }
    public static function getPageViewMobileClass()
    {
        return 'QdT_PageT_ProductDetail_ViewMobile';
    }

    public function getPageTitle()
    {
        foreach($this->seo as $meta)
        {
            if($meta->meta_name == QdSEOMeta::$META_NAME_TITLE)
            {
                return $meta->_meta_value_preview;
            }
        }
        return QdT_Library::getNoneText();
    }

    public function getPageDescription()
    {
        foreach($this->seo as $meta)
        {
            if($meta->meta_name == QdSEOMeta::$META_NAME_DESCRIPTION)
            {
                return $meta->_meta_value_preview;
            }
        }

        return '';
    }


}